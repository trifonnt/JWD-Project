<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">


	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="/logout-success" />
		<constructor-arg>
			<bean	class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</constructor-arg>

		<property name="filterProcessesUrl" value="/logout" />
	</bean>

	<security:http use-expressions="true" authentication-manager-ref="authManager">
		<security:port-mappings>
			<security:port-mapping http="8088" https="8443"/>
		</security:port-mappings>
		<security:session-management>
			<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</security:session-management>

		<!--security:intercept-url pattern="/**" access="hasRole('ROLE_USER') or hasRole('ROLE_SHOP_EMPLOYEE')" /-->
		<security:intercept-url pattern="/login" access="permitAll"/>
		<security:intercept-url pattern="/resources/**" access="permitAll"/>
		<security:intercept-url pattern="/product/new/**" access="hasRole('ROLE_SHOP_EMPLOYEE')" />
		<security:intercept-url pattern="/product/**/edit" access="hasRole('ROLE_SHOP_EMPLOYEE')" />
		<security:intercept-url pattern="/product-type/new/**" access="hasRole('ROLE_SHOP_EMPLOYEE')" />
		<security:intercept-url pattern="/product-type/**/edit" access="hasRole('ROLE_SHOP_EMPLOYEE')" />
		<security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_SHOP_EMPLOYEE')" />

		<!-- If CSF is enabled then request to /logout MUST be with POST method!  -->
		<security:csrf disabled="true"/>

		<security:form-login login-page="/login" default-target-url='/product-register' always-use-default-target="true"/>
 
		<security:http-basic />

		<security:logout logout-url="/logout" invalidate-session="true" delete-cookies="JSESSIONID" /> <!-- /j_spring_security_logout -->
	</security:http>

	<!--
	secured-annotations="enabled" - Enable usage of @Secured annotation in Java methods. 
	@Secured("IS_AUTHENTICATED_ANONYMOUSLY")
	public Account readAccount(Long id);
	-->
	<security:global-method-security authentication-manager-ref="authManager" 
			secured-annotations="disabled" jsr250-annotations="disabled" pre-post-annotations="enabled" proxy-target-class="true">
	</security:global-method-security>


	<bean id='userDetailsService' class='bg.jwd.spring.service.impl.UserDetailsServiceImpl'>
		<property name='userDaoImpl' ref='userDaoImpl' />
	</bean>

	<security:authentication-manager id="authManager">
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder hash="md5" />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>